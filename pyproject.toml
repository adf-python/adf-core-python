[tool.poetry]
name = "adf_core_python"
version = "0.1.0"
description = "Agent Development Framework for Python"
authors = [
    "Haruki Uehara <k19016kk@maslab.aitech.ac.jp>",
    "Yuki Shimada <shimapaca@maslab.aitech.ac.jp>",
    ]
readme = "README.md"
package-mode = true

[tool.poetry.dependencies]
python = "^3.12"
rcrs_core = {git = "https://github.com/adf-python/rcrs-core-python"}
pyyaml = "^6.0.2"
pytest = "^8.3.2"
types-pyyaml = "^6.0.12.20240808"
scikit-learn = "^1.5.2"
structlog = "^24.4.0"
bitarray = "^3.0.0"


[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
mypy = "^1.9.0"
types-protobuf = "^4.25.0.20240410"
ruff = "^0.4.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
format = "ruff format ."
lint = "ruff check ."
typecheck = "mypy ."
test = "pytest"
precommit = "task format && task lint && task typecheck && task test"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "pb2",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "N8"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
ignore_missing_imports = true
show_error_context = true  # エラー時のメッセージを詳細表示
show_column_numbers = true  # エラー発生箇所の行数/列数を表示
disallow_untyped_defs = true  # 関数定義の引数/戻り値に型アノテーション必須
no_implicit_optional = true  # デフォルト引数に None を取る場合型アノテーションに Optional 必須
check_untyped_defs = true  # 型注釈がない関数やメソッドに対して型チェックを行う
warn_redundant_casts = true  # 冗長なキャストに警告
